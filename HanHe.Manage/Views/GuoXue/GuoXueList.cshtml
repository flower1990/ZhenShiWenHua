@model IEnumerable<HanHe.Model.Zs_Member>
@{
    ViewBag.Title = "国学列表";
    ViewBag.Forms = "国学列表";
    ViewBag.Elements = "国学列表";
    ViewBag.FormsUrl = Url.Action("GuoXueList", "GuoXue");
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form id="form1">
    <div class="alert alert-info">
        <a id="item-create" class="btn btn-primary" href="@Url.Action("GuoXueCreate", "GuoXue")"><i class='icon-plus align-top bigger-125'></i>添加</a>
        <a id="item-edit" class="btn btn-purple" href="#"><i class='icon-pencil align-top bigger-125'></i>修改</a>
        <a id="item-delete" class="btn btn-danger" href="#"><i class='icon-remove align-top bigger-125'></i>删除</a>
        <div id="dialog-confirm" class="hide">
            <div class="alert alert-info bigger-110">
                国学将被永久删除，无法恢复
            </div>

            <div class="space-6"></div>

            <p class="bigger-110 bolder center grey">
                <i class="icon-hand-right blue bigger-120"></i>
                确定删除吗？
            </p>
        </div><!-- #dialog-confirm -->
        <div id="dialog-delete" class="hide">
            <p>请选择一项或多项进行删除</p>
        </div><!-- #dialog-delete -->
        <div id="dialog-edit" class="hide">
            <p>请选择一项进行编辑</p>
        </div><!-- #dialog-edit -->
    </div>

    <table id="grid-table"></table>

    <div id="grid-pager"></div>
</form>

@section Scripts {
    <!--删除-->
    <script type="text/javascript">
            $.widget("ui.dialog", $.extend({}, $.ui.dialog.prototype, {
                _title: function (title) {
                    var $title = this.options.title || '&nbsp;'
                    if (("title_html" in this.options) && this.options.title_html == true)
                        title.html($title);
                    else title.text($title);
                }
            }));

            $("#item-delete").on('click', function (e) {
                var grid_selector = "#grid-table";
                var pager_selector = "#grid-pager";
                var selectedRowIds = $(grid_selector).jqGrid("getGridParam", "selarrrow");
                var len = selectedRowIds.length;
                if (len == 0) {
                    $("#dialog-delete").removeClass('hide').dialog({
                        modal: true,
                        title: "<div class='widget-header widget-header-small'><h4 class='smaller'><i class='icon-ok'></i> 系统提示</h4></div>",
                        title_html: true,
                        buttons: [
                            //{
                            //    text: "Cancel",
                            //    "class": "btn btn-xs",
                            //    click: function () {
                            //        $(this).dialog("close");
                            //    }
                            //},
                            {
                                text: "OK",
                                "class": "btn btn-primary btn-xs",
                                click: function () {
                                    $(this).dialog("close");
                                }
                            }
                        ]
                    });
                    return;
                }

                e.preventDefault();
                $("#dialog-confirm").removeClass('hide').dialog({
                    resizable: false,
                    modal: true,
                    title: "<div class='widget-header'><h4 class='smaller'><i class='icon-warning-sign red'></i> 系统提示</h4></div>",
                    title_html: true,
                    buttons: [
                        {
                            html: "<i class='icon-trash bigger-110'></i>&nbsp; 确定",
                            "class": "btn btn-danger btn-xs",
                            click: function () {
                                var items = [];
                                for (var i = 0; i < len; i++) {
                                    var rowData = $(grid_selector).jqGrid('getRowData', selectedRowIds[i]);
                                    items.push(rowData.GxID);
                                }

                                $.post('@Url.Action("GuoXueDelete", "GuoXue")', { id: items.join(',') }, function (data) {
                                    if (data) {
                                        for (var i = 0; i < len; i++) {
                                            $(grid_selector).jqGrid("delRowData", selectedRowIds[0]);
                                        }
                                    }
                                });
                                $(this).dialog("close");
                            }
                        }
                        ,
                        {
                            html: "<i class='icon-remove bigger-110'></i>&nbsp; 取消",
                            "class": "btn btn-xs",
                            click: function () {
                                $(this).dialog("close");
                            }
                        }
                    ]
                });
            });
    </script>
    <!--编辑-->
    <script type="text/javascript">
        $.widget("ui.dialog", $.extend({}, $.ui.dialog.prototype, {
            _title: function (title) {
                var $title = this.options.title || '&nbsp;'
                if (("title_html" in this.options) && this.options.title_html == true)
                    title.html($title);
                else title.text($title);
            }
        }));

        $("#item-edit").on('click', function (e) {
            var grid_selector = "#grid-table";
            var pager_selector = "#grid-pager";
            var selectedRowIds = $(grid_selector).jqGrid("getGridParam", "selarrrow");
            var len = selectedRowIds.length;
            if (len > 1 || len == 0) {
                $("#dialog-edit").removeClass('hide').dialog({
                    modal: true,
                    title: "<div class='widget-header widget-header-small'><h4 class='smaller'><i class='icon-ok'></i> 系统提示</h4></div>",
                    title_html: true,
                    buttons: [
                        //{
                        //    text: "Cancel",
                        //    "class": "btn btn-xs",
                        //    click: function () {
                        //        $(this).dialog("close");
                        //    }
                        //},
                        {
                            text: "OK",
                            "class": "btn btn-primary btn-xs",
                            click: function () {
                                $(this).dialog("close");
                            }
                        }
                    ]
                });
                return;
            }

            var rowData = $(grid_selector).jqGrid('getRowData', selectedRowIds[0]);
            window.location.href = "/GuoXue/GuoXueEdit/" + rowData.GxID;
        });
    </script>

    <script type="text/javascript">
        var dicList = '';
        $.ajax({
            type: "post",
            url: "@Url.Action("GetDicList", "Dic")",
            dataType: "json",
        async: false,
        success: function (data) {
            //赋值给全局变量;
            var items = [];
            $.each(data, function (key, val) {
                items.push(val.DicID + ':' + val.DicName + ';');
            });
            dicList = items.join('');
        }
        });

        jQuery(function ($) {
            var grid_selector = "#grid-table";
            var pager_selector = "#grid-pager";

            jQuery(grid_selector).jqGrid({
                caption: "国学列表",
                url: '@Url.Action("GetData", "GuoXue")',
                datatype: "json",
                colNames: ['编号', '关键词', '短标题', '分类', '创建时间', '更新时间', '发布日期', '浏览统计', '点赞统计', '状态'],
                colModel: [
                    //{
                    //    name: 'myac', index: '操作', width: 80, fixed: true, sortable: false, resize: false,
                    //    formatter: 'actions',
                    //    formatoptions: {
                    //        keys: true,
                    //        delOptions: { recreateForm: true, beforeShowForm: beforeDeleteCallback },
                    //        //editformbutton: true, editOptions: { recreateForm: true, beforeShowForm: beforeEditCallback }
                    //    }
                    //},
                    { name: 'GxID', index: 'GxID', hidden: true, width: 90, editable: false, edittype: "text" },
                    { name: 'Keywords', index: 'Keywords', width: 90, editable: true, edittype: "text", searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
                    { name: 'GxTitleShort', index: 'GxTitleShort', width: 300, editable: true, edittype: "text", searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
                    { name: 'DicID', index: 'DicID', width: 90, editable: false, edittype: "select", formatter: 'select', editoptions: { value: dicList }, searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
                    { name: 'CreateDate', index: 'CreateDate', width: 90, editable: false, formatter: 'date', formatoptions: { newformat: 'Y/m/d' }, searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
                    { name: 'UpdateDate', index: 'UpdateDate', width: 90, editable: false, formatter: 'date', formatoptions: { newformat: 'Y/m/d' }, searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
                    { name: 'PublishDate', index: 'PublishDate', width: 90, editable: false, formatter: 'date', formatoptions: { newformat: 'Y/m/d' }, searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
                    { name: 'ViewCount', index: 'ViewCount', width: 90, editable: false, edittype: "text", searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
                    { name: 'GoodCount', index: 'GoodCount', width: 90, editable: false, edittype: "text", searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
                    { name: 'GxStatusName', index: 'GxStatusName', width: 90, editable: false, eedittype: "text", searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
                ],
                height: 360,
                rowNum: 10,
                rowList: [10, 20, 30],
                pager: pager_selector,
                sortname: 'GxID',
                altRows: true,
                autowidth: true,
                multiselect: true,
                multiboxonly: true,
                viewrecords: true,
                shrinkToFit: false,
                autoScroll: false,
                //toppager: true,
                //multikey: "ctrlKey",
                gridComplete: function () {
                    var icons = $(".ui-icon-trash");//隐藏删除键
                    icons.hide();
                },
                loadComplete: function () {
                    var table = this;
                    setTimeout(function () {
                        styleCheckbox(table);
                        updateActionIcons(table);
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                },
                serializeDelData: function (postdata) {
                    var rowdata = jQuery(grid_selector).getRowData(postdata.id);
                    return { id: postdata.id, oper: postdata.oper, user: rowdata };
                }
            });

            //enable search/filter toolbar
            //jQuery(grid_selector).jqGrid('filterToolbar',{defaultSearch:true,stringResult:true})

            //navButtons
            jQuery(grid_selector).jqGrid('navGrid', pager_selector,
                {
                    //navbar options
                    edit: false,
                    editicon: 'icon-pencil blue',
                    add: false,
                    addicon: 'icon-plus-sign purple',
                    del: false,
                    delicon: 'icon-trash red',
                    search: true,
                    searchicon: 'icon-search orange',
                    refresh: true,
                    refreshicon: 'icon-refresh green',
                    view: true,
                    viewicon: 'icon-zoom-in grey',
                },
                {
                    //edit record form
                    url: '@Url.Action("Edit", "GuoXue")',
                    closeAfterEdit: true,
                    recreateForm: true,
                    beforeShowForm: function (e) {
                        var form = $(e[0]);
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                        style_edit_form(form);
                    }
                },
                {
                    //new record form
                    url: '@Url.Action("Create", "GuoXue")',
                    closeAfterAdd: false,
                    recreateForm: true,
                    viewPagerButtons: false,
                    beforeShowForm: function (e) {
                        var form = $(e[0]);
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                        style_edit_form(form);
                    }
                },
                {
                    //delete record form
                    url: '@Url.Action("Delete", "GuoXue")',
                    recreateForm: true,
                    beforeShowForm: function (e) {
                        var form = $(e[0]);
                        if (form.data('styled')) return false;

                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                        style_delete_form(form);

                        form.data('styled', true);
                    },
                    onClick: function (e) {
                        alert(1);
                    },
                },
                {
                    //search form
                    recreateForm: true,
                    afterShowSearch: function (e) {
                        var form = $(e[0]);
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                        style_search_form(form);
                    },
                    afterRedraw: function () {
                        style_search_filters($(this));
                    },
                    multipleSearch: true,
                    /*
                    multipleGroup:true,
                    showQuery: true
                    */
                },
                {
                    //view record form
                    recreateForm: true,
                    beforeShowForm: function (e) {
                        var form = $(e[0]);
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    }
                }
            )

            function style_edit_form(form) {
                //enable datepicker on "sdate" field and switches for "stock" field
                form.find('input[name=BirthdayCn]').datepicker({ format: 'yyyy-mm-dd', autoclose: true });
                form.find('input[name=BirthdayEn]').datepicker({ format: 'yyyy-mm-dd', autoclose: true });
                form.find('input[name=UserStatus]').addClass('ace ace-switch ace-switch-5').wrap('<label class="inline" />').after('<span class="lbl"></span>');

                //update buttons classes
                var buttons = form.next().find('.EditButton .fm-button');
                buttons.addClass('btn btn-sm').find('[class*="-icon"]').remove();//ui-icon, s-icon
                buttons.eq(0).addClass('btn-primary').prepend('<i class="icon-ok"></i>');
                buttons.eq(1).prepend('<i class="icon-remove"></i>')

                buttons = form.next().find('.navButton a');
                buttons.find('.ui-icon').remove();
                buttons.eq(0).append('<i class="icon-chevron-left"></i>');
                buttons.eq(1).append('<i class="icon-chevron-right"></i>');
            }

            function style_delete_form(form) {
                var buttons = form.next().find('.EditButton .fm-button');
                buttons.addClass('btn btn-sm').find('[class*="-icon"]').remove();//ui-icon, s-icon
                buttons.eq(0).addClass('btn-danger').prepend('<i class="icon-trash"></i>');
                buttons.eq(1).prepend('<i class="icon-remove"></i>')
            }

            function style_search_filters(form) {
                form.find('.delete-rule').val('X');
                form.find('.add-rule').addClass('btn btn-xs btn-primary');
                form.find('.add-group').addClass('btn btn-xs btn-success');
                form.find('.delete-group').addClass('btn btn-xs btn-danger');
            }

            function style_search_form(form) {
                var dialog = form.closest('.ui-jqdialog');
                var buttons = dialog.find('.EditTable')
                buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'icon-retweet');
                buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'icon-comment-alt');
                buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'icon-search');
            }

            function beforeDeleteCallback(e) {
                var form = $(e[0]);
                if (form.data('styled')) return false;

                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                style_delete_form(form);

                form.data('styled', true);
            }

            function beforeEditCallback(e) {
                var form = $(e[0]);
                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                style_edit_form(form);
            }

            //it causes some flicker when reloading or navigating grid
            //it may be possible to have some custom formatter to do this as the grid is being created to prevent this
            //or go back to default browser checkbox styles for the grid
            function styleCheckbox(table) {

                $(table).find('input:checkbox').addClass('ace')
                .wrap('<label />')
                .after('<span class="lbl align-top" />')


                $('.ui-jqgrid-labels th[id*="_cb"]:first-child')
                .find('input.cbox[type=checkbox]').addClass('ace')
                .wrap('<label />').after('<span class="lbl align-top" />');
            }

            //unlike navButtons icons, action icons in rows seem to be hard-coded
            //you can change them like this in here if you want
            function updateActionIcons(table) {

                var replacement =
                {
                    'ui-icon-pencil': 'icon-pencil blue',
                    'ui-icon-trash': 'icon-trash red',
                    'ui-icon-disk': 'icon-ok green',
                    'ui-icon-cancel': 'icon-remove red'
                };
                $(table).find('.ui-pg-div span.ui-icon').each(function () {
                    var icon = $(this);
                    var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                    if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
                })

            }

            //replace icons with FontAwesome icons like above
            function updatePagerIcons(table) {
                var replacement =
                {
                    'ui-icon-seek-first': 'icon-double-angle-left bigger-140',
                    'ui-icon-seek-prev': 'icon-angle-left bigger-140',
                    'ui-icon-seek-next': 'icon-angle-right bigger-140',
                    'ui-icon-seek-end': 'icon-double-angle-right bigger-140'
                };
                $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                    var icon = $(this);
                    var $class = $.trim(icon.attr('class').replace('ui-icon', ''));

                    if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
                })

                var x = $("#grid-pager_left").find("#coco");
                if (x.length == 0) {
                    $("#view_grid-table").after("<td class='ui-pg-button ui-corner-all' title data-original-title='Remove a row'><div id='coco'  class='ui-pg-div'>" +
                        "<span class='ui-icon icon-trash blue'></span></div></td>");
                }
            }

            function enableTooltips(table) {
                $('.navtable .ui-pg-button').tooltip({ container: 'body' });
                $(table).find('.ui-pg-div').tooltip({ container: 'body' });
            }

            //绑定事件 执行删除
            $("#grid-pager_left table tbody>tr").on("click", '#coco', function () {
                var selectedRowIds = $(grid_selector).jqGrid("getGridParam", "selarrrow");
                var len = selectedRowIds.length;
                if (len != 0) {
                    if (confirm("确定要删除选中项？")) {
                        for (var i = 0; i < len; i++) {
                            var rowData = $(grid_selector).jqGrid('getRowData', selectedRowIds[i]);
                            $.post('@Url.Action("Delete", "GuoXue")', { id: rowData.GxID }, function (data) {
                                $(grid_selector).jqGrid("delRowData", selectedRowIds[0]);
                            });
                        }
                    }
                } else {
                    //$.infoShow("未勾选", 0);
                    alert("未勾选");
                }
            });
            //var selr = jQuery(grid_selector).jqGrid('getGridParam','selrow');
        });
    </script>
}